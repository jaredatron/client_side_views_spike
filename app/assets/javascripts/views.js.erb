// Views = {};
// !function(){

//   Views.locals = {};
//   Views.include = function(object){
//     extend(this.locals, object);
//   };

//   Views.layouts = {};
//   Views.pages = {};
//   Views.components = {};

//   Views.type = function(type){
//     var store = this[type+'s'];
//     if (!store) throw new Error("view type not found: "+type);
//     return store;
//   };

//   Views.register = function(type, name, view){
//     return this.type(type)[name] = view;
//   };

//   Views.render = function(type, name, locals){
//     var view = this.type(type)[name];
//     if (!view) throw new Error(type+" not found: "+name);
//     locals = extend(Object.create(this.locals), locals || {});
//     locals.render = function(type, name, locals){
//       return Views.render(type, name, locals);
//     };
//     return view(locals);
//   };

//   function extend(to, from){
//     for (p in from) to[p] = from[p];
//     return to;
//   }

// }();

// Views.include(Routes);

// Views.render({page:'posts/index', locals: {}})
// Views.render('page', 'posts/index', {})

<%
  # view_context = Class.new{
  #   include Rails.application.routes.url_helpers;
  # }
  # view_binding = view_context.new.instance_eval{ binding }
%>

<% views_root = Rails.root.join('app/assets/views') %>
<% Dir[views_root+'**/*'].map(&method(:Pathname)).each do |view| %>
  <%
    next unless view.file?
    view_name, extensions = view.relative_path_from(views_root).to_s.scan(/^(.+?)\.(.+)$/).first
    value = view.read
    # TODO: pre-render views using rubyracer one time on the server
  %>
  ActivePage.Views.register(<%= view_name.to_json %>, Haml(<%= value.to_json %>));
<% end %>

